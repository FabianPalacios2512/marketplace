# ===============================================================
# CONFIGURACIÓN PARA RENDER.COM + AWS RDS
# ===============================================================

# --- Configuración del Servidor ---
# Render asigna automáticamente el puerto via variable PORT
server.port=${PORT:8091}

# --- Conexión a la Base de Datos PostgreSQL ---
# Variables de entorno para Render (más seguro)
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://unieatsdb.ckp2uo6uawjd.us-east-1.rds.amazonaws.com:5432/postgres}
spring.datasource.username=${DATABASE_USERNAME:postgres}
spring.datasource.password=${DATABASE_PASSWORD:F1001504182.a}

# --- Configuración de Hibernate (JPA) ---
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update

# --- Configuración del Servicio de Correo ---
# Estos valores se configurarán como variables de entorno en Render.
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${SPRING_MAIL_USERNAME:}
spring.mail.password=${SPRING_MAIL_PASSWORD:}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# --- Configuración de AWS S3 para Imágenes ---
# Variables de entorno para producción (Render) - con valores por defecto seguros
app.environment=${APP_ENVIRONMENT:local}
aws.s3.bucket-name=${AWS_S3_BUCKET_NAME:marketplace-images-palacios}
aws.s3.region=${AWS_S3_REGION:us-east-1}
aws.access-key-id=${AWS_ACCESS_KEY_ID:}
aws.secret-access-key=${AWS_SECRET_ACCESS_KEY:}

# Configuración para archivos multipart (tamaño máximo de imágenes)
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB   