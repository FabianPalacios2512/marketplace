# Blueprint de Render para la aplicación Uni-Eats

services:
  # --- Servicio 1: La Base de Datos PostgreSQL ---
  - type: pserv # 'pserv' significa "Private Service" (Servicio Privado)
    name: unieats-db # Un nombre para la base de datos
    plan: free # El plan gratuito de Render
    databaseName: unieats # Nombre de la base de datos a crear
    user: unieats_user # Nombre de usuario para la base de datos
    postgresMajorVersion: 14 # Versión de PostgreSQL

  # --- Servicio 2: La Aplicación Web Java/Docker ---
  - type: web # 'web' significa "Web Service" (Servicio Web)
    name: unieats-app # Un nombre para tu aplicación
    plan: free # El plan gratuito
    runtime: docker # Le decimos a Render que use nuestro Dockerfile
    dockerfilePath: ./Dockerfile # La ruta a nuestro Dockerfile

    # Aquí está la magia: conectamos la app con la base de datos
    envVars:
      # Construimos la URL de conexión dinámicamente
      - key: SPRING_DATASOURCE_URL
        value: jdbc:postgresql://${unieats-db.hostport}/${unieats-db.database}

      # Obtenemos el usuario directamente desde el servicio de la base de datos
      - key: SPRING_DATASOURCE_USERNAME
        fromService:
          type: pserv
          name: unieats-db
          property: user

      # Obtenemos la contraseña directamente desde el servicio de la base de datos
      - key: SPRING_DATASOURCE_PASSWORD
        fromService:
          type: pserv
          name: unieats-db
          property: password